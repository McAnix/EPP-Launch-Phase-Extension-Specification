


Internet Engineering Task Force                                   W. Tan
Internet-Draft                                            Cloud Registry
Intended status: Experimental                                   G. Brown
Expires: January 10, 2013                                 CentralNic Ltd
                                                                J. Gould
                                                          VeriSign, Inc.
                                                            July 9, 2012


  Launch Phase Mapping for the Extensible Provisioning Protocol (EPP)
                      draft-tan-epp-launchphase-01

Abstract

   This document describes an Extensible Provisioning Protocol (EPP)
   extension mapping for the provisioning and management of domain names
   during the launch phase of a domain name registry.

Status of this Memo

   This Internet-Draft is submitted to IETF in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as Internet-
   Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/ietf/1id-abstracts.txt.

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html.

   This Internet-Draft will expire on January 10, 2013.

Copyright Notice

   Copyright (c) 2012 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents in effect on the date of



Tan, et al.             Expires January 10, 2013                [Page 1]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   publication of this document (http://trustee.ietf.org/license-info).
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . ancho
     1.1.  Conventions Used in This Document . . . . . . . . . . . ancho
   2.  Object Attributes . . . . . . . . . . . . . . . . . . . . . attrs
     2.1.  Application Identifiers . . . . . . . . . . . . . . . . appli
     2.2.  Launch Phases . . . . . . . . . . . . . . . . . . . . . phase
     2.3.  Status Values . . . . . . . . . . . . . . . . . . . . . statu
       2.3.1.  State Transition  . . . . . . . . . . . . . . . . . ancho
     2.4.  Claim Elements  . . . . . . . . . . . . . . . . . . . . ancho
   3.  EPP Command Mapping . . . . . . . . . . . . . . . . . . . . ancho
     3.1.  EPP <check> Command . . . . . . . . . . . . . . . . . . ancho
     3.2.  EPP <info> Command  . . . . . . . . . . . . . . . . . . ancho
       3.2.1.  Client Processing Considerations  . . . . . . . . . ancho
       3.2.2.  Example <info> command  . . . . . . . . . . . . . . ancho
     3.3.  EPP <create> Command  . . . . . . . . . . . . . . . . . ancho
       3.3.1.  Example <create> command  . . . . . . . . . . . . . ancho
       3.3.2.  Client Processing Considerations  . . . . . . . . . ancho
     3.4.  EPP <update> Command  . . . . . . . . . . . . . . . . . ancho
       3.4.1.  Server Processing Considerations  . . . . . . . . . ancho
       3.4.2.  Example <update> command  . . . . . . . . . . . . . ancho
     3.5.  EPP <delete> Command  . . . . . . . . . . . . . . . . . ancho
       3.5.1.  Server Processing Considerations  . . . . . . . . . ancho
       3.5.2.  Example <delete> command  . . . . . . . . . . . . . ancho
     3.6.  EPP <renew> Command . . . . . . . . . . . . . . . . . . ancho
     3.7.  EPP <transfer> Command  . . . . . . . . . . . . . . . . ancho
   4.  Formal Syntax . . . . . . . . . . . . . . . . . . . . . . . synta
   5.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . Ackno
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . .  IANA
   7.  Security Considerations . . . . . . . . . . . . . . . . . . Secur
   8.  Normative References  . . . . . . . . . . . . . . . . . . . ancho
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . .     0














Tan, et al.             Expires January 10, 2013                [Page 2]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


1.  Introduction

   This document describes an extension mapping for version 1.0 of the
   Extensible Provisioning Protocol (EPP) [RFC5730].  This EPP mapping
   specifies a flexible schema that can be used to implement several
   common use cases related to the provisioning and management of launch
   phase extension in a domain name registry.

   It is typical for domain registries to operate in special modes
   within certain periods of time to facilitate allocation of domain
   names for a subset of the zone namespace that becomes available.
   This document uses the term "launch phase" and the shorter form
   "launch" to refer to such a period.

   The EPP domain name mapping [RFC5731] is designed for the steady
   state operation of a registry.  During the launch, the interface used
   at each phase of the launch could be different from what is defined
   in EPP domain name mapping [RFC5731]. for example, registries
   typically accept multiple applications for a given domain name during
   the "sunrise" launch phase.  In addition, the Trademark Clearinghouse
   Draft Implementation Model [1] defines a registry interface for the
   Trademark Claims or "claims" launch phase that includes support for
   presenting a Trademark Claims Notice to the Registrant.  This
   document proposes an extension to the domain name extension in order
   to unambiguously manage the various launch phases known.

1.1.  Conventions Used in This Document

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   XML is case sensitive.  Unless stated otherwise, XML specifications
   and examples provided in this document MUST be interpreted in the
   character case presented in order to develop a conforming
   implementation.

   "launch-1.0" is used as an abbreviation for
   "urn:ietf:params:xml:ns:launch-1.0".  The XML namespace prefix
   "launch" is used, but implementations MUST NOT depend on it and
   instead employ a proper namespace-aware XML parser and serializer to
   interpret and output the XML documents.


2.  Object Attributes

   This extension adds additional elements to the EPP domain name
   mapping [RFC5731].  Only those new elements are described here.



Tan, et al.             Expires January 10, 2013                [Page 3]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


2.1.  Application Identifiers

   Domain registries MAY allow multiple applications of a given domain
   name during its launch phase operations.  Upon receiving a request to
   create a domain name, the server creates an application object
   corresponding to the request and assigns an Application Identifier
   the application and returns it to the client with the <launch:
   applicationID> element.  In order to facilitate correlation, all
   subsequent launch operations on the application object MUST be
   qualified by the previously assigned application identifier using the
   <launch:applicationID> element.

2.2.  Launch Phases

   The server MAY support multiple launch phases sequentially or
   simultaneously.  The <launch:phase> element MUST be included by the
   client to define the target launch phase of the command.

   The following Launch Phase values are defined:

   sunrise  Phase when trademark holders can submit registration
      applications with trademark information that can be validated by
      the server.

   landrush  Post sunrise phase when non-trademark holders are allowed
      to register domain names.

   claims  Trademark claims phase as defined by Trademark Clearinghouse
      Draft Implementation Model [1].

   open  Post launch phase that is also referred to as "steady state".
      Servers might require additional trademark protection with this
      phase.

   custom  A custom server launch phase that is defined using the "name"
      attribute.

   For extensibility the <launch:phase> element includes an OPTIONAL
   "name" attribute that can define a sub-phase or the full name of the
   phase when the <launch:phase> element has the "custom" value.

2.3.  Status Values

   A launch application object MAY have a status value.  The <status>
   element is used to convey extended status(es) pertaining to the
   application object, beyond what is specified in the object mapping to
   which this application object represents.




Tan, et al.             Expires January 10, 2013                [Page 4]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   The following status values are defined:

   pending:  the initial state of a newly-created application object.

   validated:  the application meets relevant registry rules.

   invalid:  the application does not validate according to registry
      rules

   allocated:  one of two possible end states of an application object;
      the object corresponding to the application has been provisioned

   rejected:  the other possible end state; the object was not
      provisioned

   Certain status values MAY be combined.  For example, an application
   can be invalid and rejected.  Additionally certain statuses MAY be
   skipped.  For example, an application can immediately start at the
   allocated status.  If a <domain:create> processes a request
   synchronously without the use of an intermediate application, than an
   Application Identifier (Section 2.1) is not needed along with the
   application status.

2.3.1.  State Transition


                               | request
                               v
                          +---------+
                          | pending |
                          +----+----+
                               |
                               |
          +--------------+-----+-----------+--------------+
          |              |                 |              |
          v              v                 v              v
    +-----------+   +---------+        +-------+      +-------+
    |           |   |         |       /         \    /         \
    | validated |   | invalid +----->| rejected  |  | allocated |
    |           |   |         |       \         /    \         /
    +----+------+   +----+----+        +-------+      +-------+
         |               |                 ^              ^
         |               |                 |              |
         |               +-----------------+              |
         |                                 |              |
         +---------------------------------+              |
         |                                                |
         +------------------------------------------------+



Tan, et al.             Expires January 10, 2013                [Page 5]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


                                 Figure 1

2.4.  Claim Elements

   An application may have zero or more <claim> elements.  A <claim>
   element describes an applicant's prior right to a given domain name.

   The <claim> element has the boolean "preValidated" attribute, which
   indicates whether a third party validation agency has already
   validated the claim.  When this attribute has a true value, the
   <pvrc> element must always be present.

   Several child elements of the <claim> element are defined:

   <id>:  an identifier for the claim.  This identifier MUST be unique
      among all claims associated with an application object.

   <pvrc>:  The Pre-Validation Result Code, an opaque string issued by a
      third-party validation agent

   <issuer>:  contains the ID of a contact object (as described in RFC
      5733 [RFC5733]) identifying the contact information of the
      authority which issued the right (for example, a trade mark office
      or company registration bureau)

   <name>:  identifying the text string in which the applicant is
      claiming a prior right

   <number>:  the registration number of the right (ie trademark number
      or company registration number)

   <type>:  indicates the type of claim being made (eg trademark,
      symbol, combined mark, company name)

   <entitlement>:  indicates the applicant's entitlement to the claim
      (ie, owner or licensee)

   <regDate>:  the date of registration of the claim

   <exDate>:  the date of expiration of the claim

   <country>:  indicates the country in which the claim is valid

   <region>:  indicates the name of a city, state, province or other
      geographic region in which the claim is valid.  This may be a two-
      character code from [WIPO.ST3]

   Apart from the mandatory <id> element, all other child elements are



Tan, et al.             Expires January 10, 2013                [Page 6]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   optional.  Server policy may place additional constraints on the
   format and requirements of such elements.


3.  EPP Command Mapping

   This mapping is designed to be flexible, requiring only a minimum set
   of required elements.

   While it is meant to serve several use cases, it does not prescribe
   any interpretation by the client or server.  Such processing is
   typically highly policy-dependent and therefore specific to
   implementations.

   Operations on application objects are done via one or more of the
   existing EPP verbs defined in the EPP domain mapping.  Registries may
   choose to support a subset of the operations.

3.1.  EPP <check> Command

   This extension does not define any extension to the EPP <check>
   command or response described in the EPP domain name mapping
   [RFC5731].

3.2.  EPP <info> Command

   This extension defines additional elements to extend the EPP <info>
   command and response to be used in conjunction with the domain name
   mapping.

   In order to indicate that the query is meant for an application
   object, an <launch:info> element is sent along with the regular
   <info> domain command.  The <launch:info> element contains the
   following child elements:

   <launch:applicationID>  the application identifier for which the
           client wishes to query.

   <launch:phase>  (optional) the phase during which the application was
           submitted or is associated with.

   If the query was successful, the server replies with an <launch:
   infData> element along with the regular EPP <resData>.  The <launch:
   infData> contains the following child elements:







Tan, et al.             Expires January 10, 2013                [Page 7]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   <launch:applicationID>  the application identifier of the returned
           application.

   <launch:phase>  (optional) the phase during which the application was
           submitted or is associated with.

   <launch:status>  status of the application.

   <launch:claim>  zero or more <launch:claim> elements.

   If present, the <launch:claim> elements may contain the following
   child elements:

   <id>:   an identifier for the claim.  This identifier MUST be unique
           among all claims associated with an application object.

   <pvrc>: The Pre-Validation Result Code.

   <issuer>:  the ID of a contact object representing the issuing
           authority.

   <name>: the textual representation of the right.

   <number>:  the registration number.

   <type>: the type of claim being made.

   <entitlement>:  the entitlement.

   <regDate>:  the registration date.

   <exDate>:  the expiry date.

   <country>:  the country.

   <region>:  the geographic region.

   Apart from the mandatory <id> element, all other child elements are
   optional.  Server policy may place additional constraints on the
   format and requirements of such elements.

3.2.1.  Client Processing Considerations

   The client MUST ensure that any successful <info> command results in
   a response that an <launch:infData> element is returned in the
   response.  This serves as a cross check that the server did receive
   the query for the application (and not a domain of the same name) and
   processed it as it was intended.



Tan, et al.             Expires January 10, 2013                [Page 8]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


3.2.2.  Example <info> command

   Following is an example <info> domain command with the <launch:info>
   extension.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <info>
      <domain:info
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
      </domain:info>
    </info>
    <extension>
      <launch:info xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
        <launch:phase>phase1</launch:phase>
      </launch:info>
    </extension>
    <clTRID>example:epp:239331</clTRID>
  </command>
</epp>

   An example response that corresponds to the above command.

<?xml version="1.0" encoding="utf-8"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <domain:infData xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
        <domain:roid>32302393_TESTDOMAIN-TLD</domain:roid>
        <domain:status s="pendingCreate" />
        <domain:registrant>ga3000</domain:registrant>
        <domain:contact type="admin">ue312987</domain:contact>
        <domain:contact type="tech">ue312987</domain:contact>
        <domain:contact type="billing">ue312987</domain:contact>
        <domain:ns>
          <domain:hostObj>ns1.example.com</domain:hostObj>
          <domain:hostObj>ns2.example.net</domain:hostObj>
        </domain:ns>
        <domain:clID>client1</domain:clID>
        <domain:crID>client1</domain:crID>
        <domain:crDate>2010-09-18T06:12:39.0Z</domain:crDate>



Tan, et al.             Expires January 10, 2013                [Page 9]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


        <domain:authInfo>
          <domain:pw>foo!bar#baz</domain:pw>
        </domain:authInfo>
      </domain:infData>
    </resData>
    <extension>
      <launch:infData xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
        <launch:phase>phase1</launch:phase>
        <launch:status s="pending" />
        <launch:claim>
          <launch:id>claim-001</launch:id>
          <launch:pvrc>3828590-P1F-932391651E3A2900338C12</launch:pvrc>
          <launch:issuer>CONTACT-IPCLEARINGHOUSE</launch:issuer>
          <launch:name>Hello</launch:name>
          <launch:number>GE 3933232</launch:number>
          <launch:type>REG-TM-WORD</launch:type>
          <launch:entitlement>owner</launch:entitlement>
          <launch:regDate>2011-09-09</launch:regDate>
          <launch:exDate>2013-09-09</launch:exDate>
          <launch:country>AU</launch:country>
          <launch:region>VIC</launch:region>
        </launch:claim>
      </launch:infData>
    </extension>
    <trID>
      <clTRID>example:epp:239331</clTRID>
      <svTRID>server-8551292e23a</svTRID>
    </trID>
  </response>
</epp>

3.3.  EPP <create> Command

   This extension defines additional elements to extend the EPP <create>
   command and response to be used in conjunction with the domain name
   mapping.

   The EPP <create> command is used to create an application.  Typically
   additional information is required to submit a domain name
   application during a launch phase.  This extension introduces an
   <launch:create> to encapsulate commonly used fields.  Another use
   case that extension addresses is the plausible need for a registry to
   distinguish between multiple (possibly concurrent) launch phases.
   Clients may specify the <launch:phase> in which the application is
   meant to be submitted.  The <launch:create> element contains the
   following child elements.




Tan, et al.             Expires January 10, 2013               [Page 10]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   <launch:phase>  (optional) the phase during which the application was
           submitted or is associated with.

   <launch:claim>  (optional) one or more <launch:claim> elements.

   The format of the <launch:claim> element is identical to that
   specified in the section on EPP <info> command.

   Upon successful processing, the server assigns an application
   identifier and returns it in an <launch:creData> element together
   with the regular <resData>.  The <launch:creData> element contains a
   single <launch:applicationID> element as described below:

   <launch:applicationID>  the application identifier assigned by the
           server.




































Tan, et al.             Expires January 10, 2013               [Page 11]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


3.3.1.  Example <create> command

   Following is an example <create> domain command with the <launch:
   create> extension.

 <?xml version="1.0" encoding="UTF-8" standalone="no"?>
 <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
   <command>
     <create>
       <domain:create
           xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
         <domain:name>example.tld</domain:name>
         <domain:period unit="y">2</domain:period>
         <domain:ns>
           <domain:hostObj>ns1.example.com</domain:hostObj>
           <domain:hostObj>ns2.example.net</domain:hostObj>
         </domain:ns>
         <domain:registrant>ga3000</domain:registrant>
         <domain:contact type="admin">ue312987</domain:contact>
         <domain:contact type="tech">ue312987</domain:contact>
         <domain:contact type="billing">ue312987</domain:contact>
         <domain:authInfo>
           <domain:pw>foo!bar#baz</domain:pw>
         </domain:authInfo>
       </domain:create>
     </create>
     <extension>
       <launch:create xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
         <launch:phase>phase1</launch:phase>
         <launch:claim>
           <launch:id>claim-001</launch:id>
           <launch:pvrc>3828590-P1F-932391651E3A2900338C12</launch:pvrc>
           <launch:issuer>CONTACT-IPCLEARINGHOUSE</launch:issuer>
           <launch:name>Hello</launch:name>
           <launch:number>GE 3933232</launch:number>
           <launch:type>REG-TM-WORD</launch:type>
           <launch:entitlement>owner</launch:entitlement>
           <launch:regDate>2011-09-09</launch:regDate>
           <launch:exDate>2013-09-09</launch:exDate>
           <launch:country>AU</launch:country>
           <launch:region>VIC</launch:region>
         </launch:claim>
       </launch:create>
     </extension>
     <clTRID>example:epp:239332</clTRID>
   </command>
 </epp>




Tan, et al.             Expires January 10, 2013               [Page 12]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   An example response that corresponds to the above command.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <response>
    <result code="1000">
      <msg>Command completed successfully</msg>
    </result>
    <resData>
      <domain:creData
         xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
       <domain:name>example.tld</domain:name>
       <domain:crDate>2010-08-10T15:38:26.623854Z</domain:crDate>
       <domain:exDate>2012-08-10T15:38:26.623854Z</domain:exDate>
      </domain:creData>
    </resData>
    <extension>
      <launch:creData xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
      </launch:creData>
    </extension>
    <trID>
      <clTRID>example:epp:239332</clTRID>
      <svTRID>server-8551292e23b</svTRID>
    </trID>
  </response>
</epp>

3.3.2.  Client Processing Considerations

   The client MUST ensure that any successful <info> command results in
   a response that an <launch:infData> element is returned in the
   response.  This serves as a cross check that the server did receive
   the query for the application (and not a domain of the same name) and
   processed it as it was intended.

3.4.  EPP <update> Command

   This extension defines additional elements to extend the EPP <update>
   command to be used in conjunction with the domain name mapping.

   Registry policies permitting, clients may update an application
   object by submitting an EPP <update> command along with an <launch:
   update> element to indicate the application object to be updated.
   The <launch:update> element contains the following child elements:






Tan, et al.             Expires January 10, 2013               [Page 13]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   <launch:applicationID>  the application identifier for which the
           client wishes to update.

   <launch:phase>  (optional) the phase during which the application was
           submitted or is associated with.

   This extension does not define any extension to the response of an
   <update> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.

3.4.1.  Server Processing Considerations

   A server implementation that conforms to this specification MUST
   respect and process the <launch:update> section, if present, and MUST
   respond with an error if the applicationID does not correspond with
   the domain name in the <domain:name> element.


































Tan, et al.             Expires January 10, 2013               [Page 14]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


3.4.2.  Example <update> command

   Following is an example <update> domain command with the <launch:
   update> extension.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <update>
      <domain:update
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
        <domain:add>
          <domain:ns>
            <domain:hostObj>ns3.example.org</domain:hostObj>
          </domain:ns>
        </domain:add>
        <domain:rem>
          <domain:ns>
            <domain:hostObj>ns2.example.net</domain:hostObj>
          </domain:ns>
        </domain:rem>
        <domain:chg>
          <domain:registrant>n3o2999</domain:registrant>
        </domain:chg>
      </domain:update>
    </update>
    <extension>
      <launch:update xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
        <launch:phase>phase1</launch:phase>
      </launch:update>
    </extension>
    <clTRID>example:epp:239333</clTRID>
  </command>
</epp>















Tan, et al.             Expires January 10, 2013               [Page 15]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239333</clTRID>
         <svTRID>server-8551292e23c</svTRID>
       </trID>
     </response>
   </epp>

3.5.  EPP <delete> Command

   This extension defines additional elements to extend the EPP <delete>
   command to be used in conjunction with the domain name mapping.

   Registry policies permitting, clients may withdraw an application by
   submitting an EPP <delete> command along with an <launch:delete>
   element to indicate the application object to be deleted.  The
   <launch:delete> element contains the following child elements:

   <launch:applicationID>  the application identifier for which the
           client wishes to delete.

   <launch:phase>  (optional) the phase during which the application was
           submitted or is associated with.

   This extension does not define any extension to the response of an
   <delete> domain command.  After processing the command, the server
   replies with a standard EPP response as defined in the EPP domain
   mapping.

3.5.1.  Server Processing Considerations

   A server implementation that conforms to this specification MUST
   respect and process the <launch:delete> section, if present, and MUST
   respond with an error if the applicationID does not correspond with
   the domain name in the <domain:name> element.

   Depending on the server policy, an implementation may choose to
   delete the application object immediately if business rules allow.
   In that case, the server MUST respond with an EPP 1000 result code.
   Alternatively, the server may choose to cancel the application
   object, in which case it SHOULD respond with an EPP 1001 result code



Tan, et al.             Expires January 10, 2013               [Page 16]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   to indicate that the object will be purged at a later date.

3.5.2.  Example <delete> command

   Following is an example <delete> domain command with the <launch:
   delete> extension.

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
  <command>
    <delete>
      <domain:delete
          xmlns:domain="urn:ietf:params:xml:ns:domain-1.0">
        <domain:name>example.tld</domain:name>
      </domain:delete>
    </delete>
    <extension>
      <launch:delete xmlns:lp="urn:ietf:params:xml:ns:launchphase-1.0">
        <launch:applicationID>2393-9323-E08C-03B1</launch:applicationID>
        <launch:phase>phase1</launch:phase>
      </launch:delete>
    </extension>
    <clTRID>example:epp:239334</clTRID>
  </command>
</epp>

   An example response that corresponds to the above command.

   <?xml version="1.0" encoding="UTF-8"?>
   <epp xmlns="urn:ietf:params:xml:ns:epp-1.0">
     <response>
       <result code="1000">
         <msg>Command completed successfully</msg>
       </result>
       <trID>
         <clTRID>example:epp:239334</clTRID>
         <svTRID>server-8551292e23d</svTRID>
       </trID>
     </response>
   </epp>

3.6.  EPP <renew> Command

   This extension does not define any extension to the EPP <renew>
   command or response described in the EPP domain name mapping
   [RFC5731].





Tan, et al.             Expires January 10, 2013               [Page 17]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


3.7.  EPP <transfer> Command

   This extension does not define any extension to the EPP <transfer>
   command or response described in the EPP domain name mapping
   [RFC5731].


4.  Formal Syntax

   An EPP object mapping is specified in XML Schema notation.  The
   formal syntax presented here is a complete schema representation of
   the object mapping suitable for automated validation of EPP XML
   instances.  The BEGIN and END tags are not part of the schema; they
   are used to note the beginning and ending of the schema for URI
   registration purposes.

   Copyright (c) 2009 IETF Trust and the persons identified as authors
   of the code.  All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

   o  Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

   o  Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

   o  Neither the name of Internet Society, IETF or IETF Trust, nor the
      names of specific contributors, may be used to endorse or promote
      products derived from this software without specific prior written
      permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.




Tan, et al.             Expires January 10, 2013               [Page 18]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


   BEGIN
   <?xml version="1.0" encoding="UTF-8"?>
   <schema
           targetNamespace="urn:ietf:params:xml:ns:launch-1.0"
           xmlns:launch="urn:ietf:params:xml:ns:launch-1.0"
      xmlns:eppcom="urn:ietf:params:xml:ns:eppcom-1.0"
      xmlns:ds="http://www.w3.org/2000/09/xmldsig#"
           xmlns="http://www.w3.org/2001/XMLSchema"
           elementFormDefault="qualified">

   <!--
   Import common element types.
   -->
     <import namespace="urn:ietf:params:xml:ns:eppcom-1.0"
             schemaLocation="eppcom-1.0.xsd"/>

     <import namespace="http://www.w3.org/2000/09/xmldsig#"
             schemaLocation="xmldig-core-schema.xsd"/>


           <annotation>
                   <documentation>
                           Extensible Provisioning Protocol v1.0
                           domain name extension schema
                           for the launch phase processing.
                   </documentation>
           </annotation>

           <!--
           Child elements found in EPP commands.
           -->
           <element name="create" type="launch:createType"/>
           <element name="update" type="launch:idContainerType"/>
           <element name="info" type="launch:infType"/>
           <element name="delete" type="launch:idContainerType"/>

           <!--
           Common container of id (identifier) element
           -->
           <complexType name="idContainerType">
                   <sequence>
                           <element name="phase" type="launch:phaseType"
                                   minOccurs="0"/>
                           <element name="applicationID" type="token"/>
                   </sequence>
           </complexType>

           <!--



Tan, et al.             Expires January 10, 2013               [Page 19]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


           Definition for application identifier
           -->
           <simpleType name="applicationIDType">
                   <restriction base="token"/>
           </simpleType>

           <!--
           Definition for launch phase.  Name is an optional attribute
           used to extend the phase type.  For example, when
           using the phase type value of <custom>, the name
           can be used to specify the custom phase.
           -->
           <complexType name="phaseType">
                   <simpleContent>
                           <extension base="launch:phaseTypeValue">
                                   <attribute name="name" type="token"/>
                           </extension>
                   </simpleContent>
           </complexType>

           <!--
           Enumeration of for launch phase values.
           -->
           <simpleType name="phaseTypeValue">
                   <restriction base="token">
                   <enumeration value="sunrise"/>
                   <enumeration value="landrush"/>
                   <enumeration value="claims"/>
                   <enumeration value="open"/>
                   <enumeration value="custom"/>
           </restriction>
           </simpleType>


           <!--
           Definition for the sunrise code
           -->
           <simpleType name="codeType">
                   <restriction base="base64Binary">
                           <minLength value="1"/>
                   </restriction>
           </simpleType>

           <!--
           Definition for the claims identifier
           -->
           <simpleType name="noticeIDType">
                   <restriction base="base64Binary">



Tan, et al.             Expires January 10, 2013               [Page 20]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


                           <minLength value="1"/>
                   </restriction>
           </simpleType>

     <simpleType name="ccType">
       <restriction base="token">
         <length value="2"/>
       </restriction>
     </simpleType>

           <!--
           Definition of the IP address taken from host-1.0.
           -->
      <complexType name="addrType">
        <simpleContent>
          <extension base="launch:addrStringType">
            <attribute name="ip" type="launch:ipType"
             default="v4"/>
          </extension>
        </simpleContent>
      </complexType>

      <simpleType name="addrStringType">
        <restriction base="token">
          <minLength value="3"/>
          <maxLength value="45"/>
        </restriction>
      </simpleType>

      <simpleType name="ipType">
        <restriction base="token">
          <enumeration value="v4"/>
          <enumeration value="v6"/>
        </restriction>
      </simpleType>

           <!-- Possible status values for sunrise application -->
           <simpleType name="statusValueType">
           <restriction base="token">
           <enumeration value="pending"/>
           <enumeration value="validated"/>
           <enumeration value="invalid"/>
           <enumeration value="allocated"/>
           <enumeration value="rejected"/>
           </restriction>
           </simpleType>

     <complexType name="statusType">



Tan, et al.             Expires January 10, 2013               [Page 21]

Internet-Draft        Launch Phase Mapping for EPP             July 2012


       <simpleContent>
         <extension base="normalizedString">
           <attribute name="s"
                   type="launch:statusValueType"
                   use="required"/>
           <attribute name="lang"
                   type="language" default="en"/>
         </extension>
       </simpleContent>
     </complexType>

           <complexType name="signedClaimToken">
                   <sequence>
                           <element ref="ds:Signature"/>
                           <element name="claim"
                                   type="launch:claimType"/>
                   </sequence>
           </complexType>

           <!--
           Child elements of create for both Sunrise and Claims periods
           -->
           <complexType name="createType">
                   <sequence>
                           <element name="phase"
                                   type="launch:phaseType"/>
                           <choice>
                                   <sequence>
                                           <element name="code"
                                                   type="launch:codeType"
